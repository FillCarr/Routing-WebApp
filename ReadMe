# Carrive Dynamic Routing App

[Demo Video](https://youtu.be/1G6DZtXQV3U)

## Overview

Carrive is a web application that delivers efficient, real-time routing by computing shortest paths along existing road networks. The app leverages the Dijkstra algorithm to find optimal routes and intelligently snaps user-provided GPS coordinates to the nearest vertices on the network for precise alignment.

To enhance routing accuracy and responsiveness, Carrive integrates advanced traffic congestion forecasting using a custom LSTM model combined with linear regression techniques. The model was initially trained on weather and traffic flow data from Chicago to capture key congestion patterns, and is now being extended and fine-tuned for Middletown, Connecticut, enabling actionable real-time traffic predictions and route optimization.

This solution targets logistics, utilities, and transportation industries seeking dynamic, data-driven routing and operational intelligence.

## Features

- Shortest path routing using Dijkstra’s algorithm on road networks
- GPS coordinate snapping to nearest network vertices for accuracy
- Real-time traffic congestion forecasting powered by LSTM and linear regression
- Scalable model initially trained on Chicago data and fine-tuned for new cities
- Web-based interactive map interface

## Getting Started

1. Clone this repository:
   ```bash
   git clone https://github.com/your-username/carrive-routing-app.git
````

2. Place your data files inside the `data/` folder.
3. Serve the app locally or host it on a static server.
4. Open `index.html` in your browser to interact with the routing interface.

## How It Works

* **Routing:** User inputs or GPS coordinates are snapped to nearest vertices on the road network graph. The Dijkstra algorithm computes the shortest path along edges weighted by distance and predicted congestion.
* **Traffic Forecasting:** The integrated LSTM + linear regression model predicts traffic conditions using historical and real-time weather and traffic data, adjusting edge weights dynamically for route optimization.
* **Model Training:** Initial model training was conducted on Chicago data, leveraging traffic and weather patterns. Current efforts focus on adapting the model to Middletown, CT for localized accuracy.

## Technologies Used

* JavaScript with Leaflet for interactive mapping
* Dijkstra’s algorithm for graph routing
* LSTM neural networks combined with linear regression for traffic prediction
* JSON data format for road network and sensor inputs

